@model dynamic
@{
    ViewBag.Title = "Get";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>All Quotes</h2>
<table id="quotes" class="table table-bordered" table-hover>
    <thead>
        <tr>
            <th>Quotes</th>
            <th>Phrase To Learn</th>
            <th>Title</th>
            <th>Learned</th>
            <th>Lerning</th>
        </tr>
    </thead>
</table>

@section scripts
{
    <script>

        if ("@Model"=="") {
            url = "/api/quotes";
        }
        else {
            url = "/api/quotes?moviesNames=@Model";
        }

        function learned(quote) {

            var result=$.ajax({
                url: "/api/learneds/" + quote,
                method: "POST",
                async:false,
            }).done(function () {
                toastr.success("Quote successfully added to learned.");
            }).fail(function () {
                toastr.error("Quote is already on learning list");
            });
            if (result.statusText == "OK") {
                event.currentTarget.setAttribute("onchange", "deletelearned(" + quote + ")");
            }
            else
            {
                event.currentTarget.checked = false;
            }

        }
        function learning(quote) {

            var result = $.ajax({
                url: "/api/learnings/" + quote,
                method: "POST",
                async: false
            }).done(function () {
                toastr.success("Quote successfully added to learning.");
            }).fail(function () {
                toastr.error("Quote is already on learned list");
            })
            if (result.statusText == "OK") {
                event.currentTarget.setAttribute("onchange", "deletelearning(" + quote + ")");
            }
            else {
                event.currentTarget.checked = false;
            }
        }


        function deletelearned(quote) {
            $.ajax({
                url: "/api/learneds/" + quote,
                method: "DELETE"
            }).done(function () {
                toastr.warning("Quote successfully deleted form learned.");
            })
            event.currentTarget.setAttribute("onchange", "learned(" + quote + ")");
        }

        function deletelearning(quote) {
            $.ajax({
                url: "/api/learnings/"+quote,
                method: "DELETE"
            }).done(function () {
                toastr.warning("Quote successfully deleted from learning.");
            })
            event.currentTarget.setAttribute("onchange", "learning(" + quote + ")");
        }

        $(document).ready(function () {
            var result = $.ajax({
                url: "/api/learneds",
                method: "GET",
                async: false
            }).responseJSON;

            var result2 = $.ajax({
                url: "/api/learnings",
                method: "GET",
                async: false
            }).responseJSON;

            $("#quotes").DataTable({
                "language": {
                    "emptyTable": "Sorry, we don't have any quotes for that movie yet"
                },
                ajax: {
                    url: url,
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "content",
                        render: function (data, type, quote) {
                            return "<a class='quote' href='/quotes/detail/" + quote.id + "'>" + quote.content + "</a>";
                        }
                    },

                    {
                        data: "phraseToLearn"
                    },
                    {
                        data: "movie.title",

                    },
                    {
                        render: function (data, type, quote) {
                            var checkbox = '<input type="checkbox" onchange="learned(' + quote.id + ')">';
                            result.filter(function (item) {
                                if (item.quoteId == quote.id)
                                    checkbox = '<input type="checkbox" checked onchange="deletelearned(' + quote.id + ')">';
                            });
                            return checkbox;
                        }
                    },
                    {
                        render: function (data, type, quote) {

                            var checkbox = '<input type="checkbox" onchange="learning(' + quote.id +')">';

                            result2.filter(function (item) {
                                if (item.quoteId == quote.id)
                                    checkbox = '<input type="checkbox" checked onchange="deletelearning(' + quote.id + ')">';
                            });
                            return checkbox;
                        }
                    }
                ]
            });

        });
    </script>
}
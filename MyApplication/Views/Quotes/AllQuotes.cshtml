@model dynamic
@{
    ViewBag.Title = "Get";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div  class="container body-content" style="padding-top: 50px">
<h2 style="text-align: center"></h2>

<table id="quotes" class="table table-bordered" table-hover>
    <thead>
    <tr>
        <th>Quote</th>
        <th>Phrase To Learn</th>
        <th>Title</th>
        <th>Learned</th>
        <th>Lerning</th>
    </tr>
    </thead>
</table>
</div>

@section scripts
{
    <script>

        //reusing AllQuotes view to FindQuotes
        if ("@Model" == "") {
            url = "/api/quotes";
            $("h2").text("All Quotes");
        } else {
            url = "/api/quotes?moviesNames=@Model";
            $("h2").text("Founded Quotes");
        }

        $(document).ready(function() {
            $("#quotes").DataTable({
                "language": {
                    "emptyTable": "Sorry, we don't have any quotes for that movie yet"
                },
                ajax: {
                    url: url,
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "content",
                        render: function(data, type, quote) {
                            return "<a class='quote' href='/quotes/detail/" + quote.id + "'>" + quote.content + "</a>";
                        }
                    },
                    {
                        data: "phraseToLearn"
                    },
                    {
                        data: "movie.title",

                    },
                    {
                        render: function (data, type, quote) {

                            //Loading appropriate checkboxes with proper events
                            var checkbox = '<input type="checkbox" onchange="addToLearneds(' + quote.id + ')">';

                            learnedQuotes.filter(function(item) {
                                if (item.quoteId == quote.id)
                                    checkbox = '<input type="checkbox" checked onchange="deleteFromLearneds(' +
                                        quote.id +
                                        ')">';
                            });

                            return checkbox;
                        }
                    },
                    {
                        render: function(data, type, quote) {

                            //Loading appropriate checkboxes with proper events
                            var checkbox = '<input type="checkbox" onchange="addToLearnings(' + quote.id + ')">';

                            learningQuotes.filter(function(item) {
                                if (item.quoteId == quote.id)
                                    checkbox = '<input type="checkbox" checked onchange="deleteFromLearnings(' +
                                        quote.id +
                                        ')">';
                            });

                            return checkbox;
                        }
                    }
                ]
            });
        });
    </script>
}
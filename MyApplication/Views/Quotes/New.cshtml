@model dynamic
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="container body-content" style="padding-top: 50px">
    <h2 style="padding-bottom: 20px">New Quote</h2>
    <form id="newQuote">
        <div class="form-group">
            <label>Quote</label>
            <div class="tt-container">
                <textarea rows="7" cols="50" name="quote" value="" class="form-control" required maxlength="400" minlength="15"> </textarea>
            </div>
        </div>

        <div class="form-group">
            <label>Phrase to Learn</label>
            <div class="tt-container">
                <input name="phraseToLearn" type="text" value="" required maxlength="40" minlength="3" class="form-control"/>
            </div>
        </div>

        <div class="form-group">
            <label>Select movie:</label>
            <select class="form-control" name="movieId" data-rule-validMovie="true">
                <option value="0">Select</option>
                @foreach (var movie in Model)
                {
                    <option value="@movie.Id">@movie.Title</option>
                }
            </select>
        </div>
        

        <div class="form-group">
            <label>Youtube Link</label>
            <div class="tt-container">
                <input name="YoutubeLink" type="text" value="" class="form-control" required data-rule-validLink="true"/>
            </div>
        </div>
        <button class="btn btn-primary">Submit</button>
    </form>
</div>
@section scripts
{
    <script>

     $(document).ready(function () {
   
         $.validator.addMethod("validMovie", function () {
             return newQuote.movieId.value != 0;
         }, "Please select a movie");

         $.validator.addMethod("validlink", function () {
             var ultimateYoutubeRegex = /^(?:https?:\/\/)?(?:www\.)?(?:youtu\.be\/|youtube\.com\/(?:embed\/|v\/|watch\?v=|watch\?.+&v=))((\w|-){11})(?:\S+)?$/;
             return newQuote.YoutubeLink.value.match(ultimateYoutubeRegex);
         }, "Link is invalid");
         
         $("#newQuote").validate();

             $("#newQuote").submit(function () {
                 var replacing = newQuote.quote.value.replace(/\r\n|\r|\n/g, '<br/>'); //adding breakline to database
                 var data = $('#newQuote').serializeArray();
                 data.push({ name: 'content', value: replacing });

                 $.ajax({
                     url: "/api/quotes",
                     method: "POST",
                     data: data
                 })
                 .done(function () {
                     toastr.success("Quote successfully added.");
                     $('#newQuote')[0].reset();
                 })
                        .fail(function () {
                            toastr.error("Fields incorrectly filled.");
                        });
                 return false;
             });
         });
    </script>
}

